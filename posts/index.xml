<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on sdqs-Zy的博客</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on sdqs-Zy的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Thu, 10 Oct 2019 17:49:33 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java的包管理与Maven初步</title>
      <link>http://example.org/posts/java%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%8Emaven%E5%88%9D%E6%AD%A5/</link>
      <pubDate>Thu, 10 Oct 2019 17:49:33 +0800</pubDate>
      
      <guid>http://example.org/posts/java%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%8Emaven%E5%88%9D%E6%AD%A5/</guid>
      <description>Java的包管理与Maven初步 JVM的工作就是执行一个个类的字节码，需要哪个类便会根据classpath挨个找
类路径Classpath  类的全限定类名(目录层级)唯一确定了一个类
 jar包就是一堆类的集合压缩包
 当classpath里的不同版本jar包出现同名类，会优先使用前面的 (classpath hell)
什么是包管理 包管理的本质就是告诉JVM如何找到所需的第三方类库
 以及成功地解决其中的冲突问题
Maven Maven 的中央仓库按照一定的约定存储所有包
 当你需要哪个包时，Maven会帮你下载到本地仓库，默认位于~/.m2，在这里进行缓存。
 Maven 按照约定为所有的包编号，方便检索。(groupId/artifactId/version)
Maven在依赖和冲突方面的管理 包冲突的几种常见异常
 AbstractMethodError
 NoClassDefFoundError
 ClassNotFoundException
 LinkageError
 传递性依赖的自动管理
 原则：绝不允许最终的classpath出现同名不同版本的jar包
 依赖冲突的解决原则：根据传递性依赖链，最近的胜出
 解决包冲突的方法
首先通过Maven里的图形依赖关系，或者mvn dependency:tree寻找冲突依赖
 直接在项目的pom.xml（project object model，项目的说明书）文件中依赖需要的需要的包(即利用 &amp;lsquo;最近的胜出&amp;rsquo; 原则，自动过滤与之冲突的依赖)
 在中加入标签手动排除冲突依赖
 利用Maven helper插件，快速解决冲突
依赖的scope 常见的比如：
 compile 表示该依赖在 main 和 test 中都可见
 test 表示只在test 中可见
 provided 表示只在编译main代码时有效，运行时候就无效(NoClassDefFoundError的常见原因)</description>
    </item>
    
    <item>
      <title>命令行详解</title>
      <link>http://example.org/posts/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 09 Oct 2019 16:16:42 +0800</pubDate>
      
      <guid>http://example.org/posts/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%A6%E8%A7%A3/</guid>
      <description>操作系统与计算机原理：命令行详解 1.kernel 内核 shell 壳
命令的全部要素  可执行程序
 参数
 环境变量
 工作目录(查看当前工作路径：pwd)
可执行程序 windows: exe/bat/com
UNIX/Linux: x权限
   去哪⾥找程序？ Windows：Path环境变量 + 当前⽬录 UNIX/Linux：PATH环境变量  设置环境变量 Linux常用命令 进入目录 cd (change directory)
1. cd . 当前目录
2. cd .. 当前目录的父目录
展示文件
1. ls展示当前目录下的非隐藏文件(.开头的文件就是隐藏文件) ls -a 全部展示
2. ls -l 等价于ll 展示详细信息
3. ls -alth (list) 相当于 -a (all) -l (详细) -t (按照文件修改顺序倒叙排列) -h (人类可读模式) 四个命令
移动/重命名文件 mv (move)</description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Wed, 09 Oct 2019 10:54:34 +0800</pubDate>
      
      <guid>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>开博测试 我的博客开通了，希望能写出好文章。</description>
    </item>
    
  </channel>
</rss>